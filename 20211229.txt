$ node httpServer.js & 로 백그라운드에서 포트 열어놓고
그 다음에 localhost:3001/version 이나 localhost:3001/blocks 주소창에 검색해보면 나올 것
$ curl -X GET http://localhost:3001/blocks 로도 확인 가능
만약 파이썬이 설치되어 있는 사람은
$ curl -X GET http://localhost:3001/blocks | python3 -m json.tool
$ ps -ef
$ curl -X POST http://localhost:3001/stop
$ ps -ef

$ curl -H "Content-type:application/json" —data "{\"data\" : [\"Anything1\", \"Anything2\"]}" http"//localhost:3001/mineBlock

※※※※※
$ vi p2pServer.js
const p2p_port = process.env.P2P_PORT || 6001
const WebSocket = require("ws")

function initP2PServer(){
  const server = WebSocket.Server({port:p2p_port})
  // ▼ 이 웹소켓 서버가 연결되면 인자로 ws를 받아와서 연결을 초기화해줄 것이다 라는 뜻
  server.on("connection", (ws)=>{initConnection(ws);})
  console.log("Listening webSocket port : " + p2p_port)
}

let sockets = []

function initConnection(ws){
  sockets.push(ws)
}

function getSockets(){
  return sockets;
}

function write(ws, message){
  ws.send(JSON.stringify(message))
}

function broadcast(message){
  // forEach로 sockets 안의 0번부터 끝까지를 계속 for문 돌리는 중
  sockets.forEach(
    (socket)=>{
      write(socket, message)
    }
  )
}

function connectToPeers(newPeers){
  newPeers.forEach(
    (peer)=>{
      const ws = new WebSocket(peer)
      ws.on("open", ()=>{initConnection(ws)})
      ws.on("error", ()=>{console.log("connection Failed!!")})
    }
  )
}

:wq

$ vi chainedBlock.js에 app.get("/blocks"~~~) 위에 추가해줄 addPeers

// curl -H "Content-type:application/json" --data "{\"data\" : [ ws://localhost:6002, ws://localhost:6003 ]}"
app.post("/addPeers", (req, res)=>{
  connetToPeers(요 안에 이제 짜보기)
})





