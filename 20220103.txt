p2pServer.js의 replaceChain부터 만들어보자
가장 긴 체인(가장 최신의 원장)을 찾아서 

chainedBlock.js에서 replaceChain함수를 만들고 export하자
-> 내용은 가서 확인

random 모듈 깔아주기
$ npm i random

checkValidBlock.js에서 isValidChain(newBlocks) 함수 만들어주기
-> replace할 체인 자체가 유효한지를 확인하기 위해

아무나 블록을 만들면 안 되기 때문에 비용이 들게 하고 만들 수 있는 권한을 따로 부여해야 하고
여기서 나온 개념이 Pow, Pos, DPos, Pof 등이다.

chainedBlock의 BlockHeader 클래스의 bit를 difficulty로 바꿔준다.
chainedBlock의 createGenesisBlock 함수의 timestamp 부분을 바꿔준다.
checkValidBlock의 BlockHeader 클래스의 bit를 difficulty로 바꿔준다.

비트코인의 채굴 방법 : 특정한 개수의 0으로 시작하는 블록 해쉬를 구해라

chainedBlock.js에
1) function hexToBinary(s)
2) function hashMatchesDifficulty(hash, difficulty) 
3) function findBlock(currentVersion, nextIndex, previousHash, nextTimestamp, merkleRoot, difficulty, nonce)
함수 만들기



